name: ldimbenchmark

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  poetry_version: 1.2.2

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10'] # later "3.11"

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: cache poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: python-${{ matrix.python-version }}-poetry-${{ env.poetry_version }}-0

      - uses: snok/install-poetry@v1
        with:
          version: ${{ env.poetry_version }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: python-${{ matrix.python-version }}-pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      # Install project itself
      - run: poetry install --no-interaction

      - name: Run tox
        run: poetry run tox

  docs:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      python-version: '3.10'
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}

      - name: cache poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: python-${{ env.python-version }}-poetry-${{ env.poetry_version }}-0

      - uses: snok/install-poetry@v1
        with:
          version: ${{ env.poetry_version }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: python-${{ env.python-version }}-pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: Run mkdocs-material
        run: poetry run mkdocs gh-deploy
