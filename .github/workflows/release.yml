name: ldimbenchmark Release

on: workflow_dispatch

env:
  poetry_version: 1.2.2

jobs:
  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: release
    env:
      python-version: '3.10'
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}

      - name: cache poetry install
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: python-${{ env.python-version }}-poetry-${{ env.poetry_version }}-0

      - uses: snok/install-poetry@v1
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        with:
          version: ${{ env.poetry_version }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: python-${{ env.python-version }}-pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: Semantic Release
        id: semantic-release
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release publish
          echo "{version}={$(poetry run semantic-release print-version --current)}" >> $GITHUB_OUTPUT
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        # outputs:
        #   matrix: ${{ steps.semantic-release.outputs.version }}

      # Trigger pypi cache once so the docker build does not fail.
      - run: pip install ldimbenchmark==${{ steps.semantic-release.outputs.version }} || true

      - name: Extract metadata (tags, labels) for Docker
        if: steps.semantic-release.outputs.version != null
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ghcr.io/ldimbenchmark/ldimbenchmark

      - name: Build and push Docker image
        if: steps.semantic-release.outputs.version != null
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          tags: ghcr.io/ldimbenchmark/ldimbenchmark:${{ steps.semantic-release.outputs.version }} , ghcr.io/ldimbenchmark/ldimbenchmark:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.semantic-release.outputs.version }}

      - name: Trigger new methods Release
        if: steps.semantic-release.outputs.version != null
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GHA_WORKFLOW_TRIGGER }}
          script: |
            const result = await github.rest.actions.createWorkflowDispatch({
              owner: 'ldimbenchmark',
              repo: 'methods',
              workflow_id: 'main.yml',
              event_type: 'release_ldimbenchmark',
              client_payload: {
                version: '${{ steps.semantic-release.outputs.version }}'
              }
            })
            console.log(result)
